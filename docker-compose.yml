name: ai_image_gen

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  orchestrator_service:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    container_name: orchestrator_service
    env_file: ./.env
    command: uvicorn orchestration_service:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 10s
      timeout: 5s
      retries: 5

  fal_adapter_service:
    build:
      context: .
      dockerfile: Dockerfile.fal_adapter
    container_name: fal_adapter_service
    env_file: ./.env
    command: python -u fal_adapter_service.py
    depends_on:
      rabbitmq:
        condition: service_healthy

  pollo_adapter_service:
    build:
      context: .
      dockerfile: Dockerfile.pollo_adapter
    container_name: pollo_adapter_service
    env_file: ./.env
    command: python -u pollo_adapter_service.py
    depends_on:
      rabbitmq:
        condition: service_healthy

  frontend_ui:
    image: nginx:alpine
    container_name: frontend_ui
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      orchestrator_service:
        condition: service_healthy
